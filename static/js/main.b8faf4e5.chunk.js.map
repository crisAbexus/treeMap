{"version":3,"sources":["uid.js","App.js","serviceWorker.js","index.js"],"names":["count","name","Id","id","this","href","URL","window","location","App","useState","data","setData","useEffect","a","d3","then","catch","e","console","error","loadData","svgRef","useD3","anchor","svg","format","d","ancestors","reverse","map","join","tile","node","x0","y0","x1","y1","children","child","x","rangeRound","y","attr","height","style","group","append","call","render","sum","value","sort","b","treemap","root","selectAll","concat","filter","parent","on","event","zoomout","zoomin","text","leafUid","uid","clipUid","split","i","nodes","length","position","select","group0","group1","domain","transition","duration","t","remove","attrTween","insert","drawTreemap","className","width","ref","prototype","toString","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b8faf4e5.chunk.js","sourcesContent":["var count = 0;\n\nexport default function(name) {\n  return new Id(\"O-\" + (name == null ? \"\" : name + \"-\") + ++count);\n}\n\nfunction Id(id) {\n  this.id = id;\n  this.href = new URL(`#${id}`, window.location) + \"\";\n}\n\nId.prototype.toString = function() {\n  return \"url(\" + this.href + \")\";\n};","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as d3 from \"d3\";\nimport { useD3 } from \"d3blackbox\";\nimport uid from \"./uid\";\n\nfunction drawTreemap(svg, data) {\n  const format = d3.format(\",d\");\n  const height = 924;\n  const width = 954;\n\n  const name = d => d.ancestors().reverse().map(d => d.data.name).join(\"/\")\n\n  const treemap = (data) => d3.treemap()\n    .tile(tile)\n    (d3.hierarchy(data)\n      .sum(d => d.value)\n      .sort((a, b) => b.value - a.value))\n\n  function tile(node, x0, y0, x1, y1) {\n    d3.treemapBinary(node, 0, 0, width, height);\n    for (const child of node.children) {\n      child.x0 = x0 + child.x0 / width * (x1 - x0);\n      child.x1 = x0 + child.x1 / width * (x1 - x0);\n      child.y0 = y0 + child.y0 / height * (y1 - y0);\n      child.y1 = y0 + child.y1 / height * (y1 - y0);\n    }\n  }\n\n  const x = d3.scaleLinear().rangeRound([0, width]);\n  const y = d3.scaleLinear().rangeRound([0, height]);\n\n  svg.attr(\"viewBox\", [0.5, -30.5, width, height + 30])\n    .style(\"font\", \"10px sans-serif\");\n\n  let group = svg.append(\"g\")\n    .call(render, treemap(data));\n\n  function render(group, root) {\n    const node = group\n      .selectAll(\"g\")\n      .data(root.children.concat(root))\n      .join(\"g\");\n\n    node.filter(d => d === root ? d.parent : d.children)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"click\", (event, d) => d === root ? zoomout(root) : zoomin(d));\n\n    node.append(\"title\")\n      .text(d => `${name(d)}\\n${format(d.value)}`);\n\n    node.append(\"rect\")\n      .attr(\"id\", d => (d.leafUid = uid(\"leaf\")).id)\n      .attr(\"fill\", d => d === root ? \"#fff\" : d.children ? \"#ccc\" : \"#ddd\")\n      .attr(\"stroke\", \"#fff\");\n\n    node.append(\"clipPath\")\n      .attr(\"id\", d => (d.clipUid = uid(\"clip\")).id)\n      .append(\"use\")\n      .attr(\"xlink:href\", d => d.leafUid.href);\n\n    node.append(\"text\")\n      .attr(\"clip-path\", d => d.clipUid)\n      .attr(\"font-weight\", d => d === root ? \"bold\" : null)\n      .selectAll(\"tspan\")\n      .data(d => (d === root ? name(d) : d.data.name).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)))\n      .join(\"tspan\")\n      .attr(\"x\", 3)\n      .attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`)\n      .attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 0.7 : null)\n      .attr(\"font-weight\", (d, i, nodes) => i === nodes.length - 1 ? \"normal\" : null)\n      .text(d => d);\n\n    group.call(position, root);\n  }\n\n  function position(group, root) {\n    group.selectAll(\"g\")\n      .attr(\"transform\", d => d === root ? `translate(0,-30)` : `translate(${x(d.x0)},${y(d.y0)})`)\n      .select(\"rect\")\n      .attr(\"width\", d => d === root ? width : x(d.x1) - x(d.x0))\n      .attr(\"height\", d => d === root ? 30 : y(d.y1) - y(d.y0));\n  }\n\n  // When zooming in, draw the new nodes on top, and fade them in.\n  function zoomin(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = group = svg.append(\"g\").call(render, d);\n\n    x.domain([d.x0, d.x1]);\n    y.domain([d.y0, d.y1]);\n\n    svg.transition()\n      .duration(750)\n      .call(t => group0.transition(t).remove()\n        .call(position, d.parent))\n      .call(t => group1.transition(t)\n        .attrTween(\"opacity\", () => d3.interpolate(0, 1))\n        .call(position, d));\n  }\n\n  // When zooming out, draw the old nodes on top, and fade them out.\n  function zoomout(d) {\n    const group0 = group.attr(\"pointer-events\", \"none\");\n    const group1 = group = svg.insert(\"g\", \"*\").call(render, d.parent);\n\n    x.domain([d.parent.x0, d.parent.x1]);\n    y.domain([d.parent.y0, d.parent.y1]);\n\n    svg.transition()\n      .duration(750)\n      .call(t => group0.transition(t).remove()\n        .attrTween(\"opacity\", () => d3.interpolate(1, 0))\n        .call(position, d))\n      .call(t => group1.transition(t)\n        .call(position, d.parent));\n  }\n\n  return svg.node();\n}\n\nexport default function App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    async function loadData() {\n      d3.json('flare-2.json').then(data => {\n        setData(data)\n      }).catch(e => console.error(e))\n    }\n    loadData();\n  },[])\n\n  const svgRef = useD3(anchor => {\n    if (data !== null) {\n      drawTreemap(d3.select(anchor), data);\n    }\n  })\n\n  return (\n    <div className='App'>\n      <svg width='1024' height='1024' ref={svgRef} />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}